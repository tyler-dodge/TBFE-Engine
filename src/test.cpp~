#include <iostream>
#include <boost/bind.hpp>
using namespace std;
class bobDole
{
private:
public:
  int poop;
  void test();
};
void bobDole::test()
{
  cout << poop << "\n";
};
void testFunky()
{
  cout << "mwhahaha\n";
  //testFunc();
};
template <class t> void delegate(t * object,boost::mem_fn testing)
{
  boost::bind(&testing,&object)();
};
int main()
{
  using namespace boost;
  bobDole testing;
  testing.poop=25;
  typeOf(boost::mem_fn(&bobDole::test));
  delegate<bobDole>(&testing,&bobDole::test);
};

#include "TileLayer.h"
Position TileLayer::getDimensions()
{
  return dimensions_;
};
Tile TileLayer::getTile(int x,int y)
{
  Position Dimensions;
  Dimensions=getDimensions();
  if (x < 0 || y < 0 || x >= Dimensions.X || y >= Dimensions.Y)
    {
      Tile BlankTile;
      BlankTile.Passability=0;
      BlankTile.TileSet=0;
      BlankTile.Type=NONE;
      BlankTile.PlantInfo.Type=NO_PLANT;
      return BlankTile;
    };
  Tile tile=data_.at(x+y*width);
  return tile;
};
void TileLayer::changeTile(int x,int y,Tile newTile)
{
  Position Dimensions;
  Dimensions=getDimensions();
  if (x>Dimensions.X || y > Dimensions.Y || x < 0 || y < 0)
    {
      return;
    };
  data_.at(x+y*width)=newTile;
};
void TileLayer::generateMap(int x,int y,Tile newTile)
{
  data_.resize(0);
  data_.resize(x*y);
  dimensions_.X=x;
  dimensions_.Y=y;
  for (int i=0;i<x*y;i++)
    {
      data.at(i)=newTile;
    };
};
//TODO: getVisibility, setVisibility
